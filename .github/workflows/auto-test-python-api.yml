name: Auto Test Python API
# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-python

on:
  push:  
    paths:
    - 'TodoistProxyAPIPython/**'
    - '.github/workflows/auto-test-python-api.yml'
    
  pull_request:  
    paths:
    - 'TodoistProxyAPIPython/**'
    - '.github/workflows/auto-test-python-api.yml'

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        #TODO see to use more version ?
        #python-version: [2.7, 3.5, 3.6, 3.7, 3.8]
        python-version: [3.8]
    
    steps:
    - name: Download sources
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 flask
        pip install pytest requests
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Unit Testing with pytest
      run: |
        pytest -m 'unittest and not deploymenttest' ./TodoistProxyAPIPython

    - name: GCP / Install gcloud SDK
      run: |
        sudo apt-get update && sudo apt-get install google-cloud-sdk && sudo apt-get install google-cloud-sdk-app-engine-python
        
    - name: GCP / Connect to TEST env 
      env: 
        GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH_ENV_TEST }}
        CLOUDSDK_CORE_PROJECT: websitequickadding4todoisttest
      run: |
        echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
        sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
        gcloud config set project "$CLOUDSDK_CORE_PROJECT"

    - name: GCP / Deploy to Cloud Function
      run: |
        cloud functions deploy test-to-delete --source ./TodoistProxyAPIPython --entry-point simple_cloud_function --region europe-west1 --runtime python38 --trigger-http --allow-unauthenticated

    - name: Test Deployment with pytest
      run: |
        pytest -m 'not unittest and deploymenttest' ./TodoistProxyAPIPython
